import { useState } from 'react';
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Select, SelectTrigger, SelectContent, SelectItem, SelectValue } from "@/components/ui/select";
import { Checkbox } from "@/components/ui/checkbox";

export default function TodoApp() {
  const [tasks, setTasks] = useState([]);
  const [task, setTask] = useState({ title: '', description: '', priority: 'medium', completed: false });
  const [editIndex, setEditIndex] = useState(null);

  const addTask = () => {
    if (!task.title.trim()) return;
    if (editIndex !== null) {
      const updated = [...tasks];
      updated[editIndex] = task;
      setTasks(updated);
      setEditIndex(null);
    } else {
      setTasks([...tasks, task]);
    }
    setTask({ title: '', description: '', priority: 'medium', completed: false });
  };

  const editTask = (index) => {
    setTask(tasks[index]);
    setEditIndex(index);
  };

  const deleteTask = (index) => {
    const updated = tasks.filter((_, i) => i !== index);
    setTasks(updated);
  };

  const toggleCompletion = (index) => {
    const updated = [...tasks];
    updated[index].completed = !updated[index].completed;
    setTasks(updated);
  };

  return (
    <div className="p-6 max-w-2xl mx-auto">
      <h1 className="text-2xl font-bold mb-4">📝 To-Do List</h1>

      <Card className="mb-6">
        <CardContent className="space-y-4 p-4">
          <Input
            placeholder="Task Title"
            value={task.title}
            onChange={(e) => setTask({ ...task, title: e.target.value })}
          />
          <Textarea
            placeholder="Task Description"
            value={task.description}
            onChange={(e) => setTask({ ...task, description: e.target.value })}
          />
          <Select
            value={task.priority}
            onValueChange={(val) => setTask({ ...task, priority: val })}
          >
            <SelectTrigger>
              <SelectValue placeholder="Select Priority" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="high">High</SelectItem>
              <SelectItem value="medium">Medium</SelectItem>
              <SelectItem value="low">Low</SelectItem>
            </SelectContent>
          </Select>

          <Button className="w-full" onClick={addTask}>
            {editIndex !== null ? 'Update Task' : 'Add Task'}
          </Button>
        </CardContent>
      </Card>

      <div className="space-y-4">
        {tasks.map((t, i) => (
          <Card
            key={i}
            className={`border-l-4 ${
              t.priority === 'high'
                ? 'border-red-500'
                : t.priority === 'medium'
                ? 'border-yellow-500'
                : 'border-green-500'
            } ${t.completed ? 'opacity-60 line-through' : ''}`}
          >
            <CardContent className="p-4 space-y-2">
              <div className="flex justify-between items-center">
                <h2 className="text-lg font-semibold">{t.title}</h2>
                <Checkbox checked={t.completed} onCheckedChange={() => toggleCompletion(i)} />
              </div>
              <p>{t.description}</p>
              <p className="text-sm italic text-gray-500">Priority: {t.priority}</p>
              <div className="flex gap-2">
                <Button size="sm" onClick={() => editTask(i)}>Edit</Button>
                <Button size="sm" variant="destructive" onClick={() => deleteTask(i)}>Delete</Button>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  );
}
